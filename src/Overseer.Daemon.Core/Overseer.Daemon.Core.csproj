<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <!-- 
            Since the Mono and .Net Core versions are currently both being maintained
            the client app reside in the solution root. This will allow for all the 
            SPA goodness of .Net Core. 
            
            The client app was developed using VSCode so it's not part of the Overseer solution.
        -->
        <SpaRoot>..\OverseerUI\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <RootNamespace>Overseer.Daemon</RootNamespace>
        <AssemblyName>Overseer.Daemon</AssemblyName>
        <Version>1.0.22</Version>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="FluentCommandLineParser-netstandard" Version="1.4.3.13" />
        <PackageReference Include="Microsoft.AspNetCore.Owin" Version="3.1.0" />
        <PackageReference Include="Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson" Version="3.1.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.0" />
        <PackageReference Include="Microsoft.Extensions.Hosting" Version="3.1.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.Log4Net.AspNetCore" Version="3.0.3" />
        <PackageReference Include="Nancy" Version="2.0.0" />
        <PackageReference Include="Nancy.Owin" Version="2.0.0" />
        <PackageReference Include="System.Diagnostics.Debug" Version="4.3.0" />
        <PackageReference Include="System.IO.FileSystem" Version="4.3.0" />
        <PackageReference Include="System.Net.NameResolution" Version="4.3.0" />
        <PackageReference Include="System.Runtime.Extensions" Version="4.3.1" />
        <PackageReference Include="System.Runtime.InteropServices" Version="4.3.0" />
        <PackageReference Include="System.Threading" Version="4.3.0" />
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\Overseer.Daemon.Common\Overseer.Daemon.Common.csproj" />
        <ProjectReference Include="..\Overseer\Overseer.csproj" />
    </ItemGroup>
    <ItemGroup>
        <Content Update="log4net.config">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>
    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod --configuration=production" />
        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>$([System.String]::Copy('%(DistFiles.Identity)').Replace('..\OverseerUI\dist\','OverseerUI\'))</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>